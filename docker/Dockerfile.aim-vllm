# AIM Engine + vLLM Combined Container
FROM rocm/vllm:latest

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONPATH="/workspace/aim-engine/src"
ENV HF_HOME="/workspace/model-cache"
ENV TRANSFORMERS_CACHE="/workspace/model-cache"
ENV HF_DATASETS_CACHE="/workspace/model-cache"
ENV HF_HUB_DISABLE_TELEMETRY="1"

# Install additional dependencies
RUN pip3 install --no-cache-dir \
    pyyaml \
    pathlib \
    typing-extensions \
    requests \
    numpy \
    scipy \
    psutil \
    huggingface-hub

# Create workspace directory
WORKDIR /workspace

# Copy AIM Engine source code
COPY src/ /workspace/aim-engine/src/
COPY config/ /workspace/aim-engine/config/
COPY setup.py /workspace/aim-engine/
COPY requirements.txt /workspace/aim-engine/
COPY README.md /workspace/aim-engine/

# Install AIM Engine in development mode
RUN cd /workspace/aim-engine && \
    pip3 install -e .

# Create cache directories
RUN mkdir -p /workspace/model-cache /tmp/.cache /root/.cache/huggingface

# Create convenience scripts
RUN echo '#!/bin/bash\n\
# Generate optimal vLLM command using AIM Engine\n\
cd /workspace/aim-engine\n\
python3 -m aim_engine.aim_generate_command "$@"\n\
' > /usr/local/bin/aim-generate && \
    chmod +x /usr/local/bin/aim-generate

RUN echo '#!/bin/bash\n\
# Run vLLM server with generated configuration\n\
cd /workspace/aim-engine\n\
python3 -m aim_engine.aim_generate_command "$@" --serve\n\
' > /usr/local/bin/aim-serve && \
    chmod +x /usr/local/bin/aim-serve

RUN echo '#!/bin/bash\n\
# Interactive mode with AIM Engine tools\n\
cd /workspace/aim-engine\n\
if [ $# -eq 0 ]; then\n\
    echo "Starting AIM Engine shell..."\n\
    echo "Available commands: aim-generate, aim-serve"\n\
    echo "Current directory: $(pwd)"\n\
    exec /bin/bash\n\
else\n\
    exec /bin/bash "$@"\n\
fi\n\
' > /usr/local/bin/aim-shell && \
    chmod +x /usr/local/bin/aim-shell

# Default command
CMD ["/bin/bash"] 