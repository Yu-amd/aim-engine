apiVersion: apps/v1
kind: Deployment
metadata:
  name: aim-engine
  namespace: aim-engine
  labels:
    app.kubernetes.io/name: aim-engine
    app.kubernetes.io/instance: aim-engine
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: aim-engine
      app.kubernetes.io/instance: aim-engine
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aim-engine
        app.kubernetes.io/instance: aim-engine
    spec:
      serviceAccountName: aim-engine-sa
      
      containers:
      - name: aim-engine
        image: "localhost:5000/aim-vllm:latest"
        imagePullPolicy: IfNotPresent
        
        # Command and args
        command: 
        - "python"
        - "-m"
        - "vllm.entrypoints.openai.api_server"
        args:
        - "--model"
        - "Qwen/Qwen2.5-7B-Instruct"
        - "--dtype"
        - "bfloat16"
        - "--host"
        - "0.0.0.0"
        - "--port"
        - "8000"
        - "--tensor-parallel-size"
        - "1"
        
        # Port
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        
        # Resources
        resources:
          requests:
            cpu: "4"
            memory: "16Gi"
            amd.com/gpu: "1"
          limits:
            cpu: "8"
            memory: "32Gi"
            amd.com/gpu: "1"
        
        # Environment variables
        env:
        - name: HIP_VISIBLE_DEVICES
          value: "0,1,2,3,4,5,6,7"
        - name: PYTORCH_ROCM_ARCH
          value: "gfx90a"
        - name: VLLM_USE_ROCM
          value: "1"
        - name: HF_HUB_DISABLE_TELEMETRY
          value: "1"
        
        # Volume mounts
        volumeMounts:
        - name: model-cache
          mountPath: /workspace/model-cache
      
      # Volumes
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: aim-engine-pvc
      
      # Node selector
      nodeSelector:
        amd.com/gpu: "true"
        kubernetes.io/os: linux
      
      # Tolerations
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: amd.com/gpu
        operator: Exists
        effect: NoSchedule 