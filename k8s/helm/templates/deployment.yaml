apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aim-engine.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "aim-engine.labels" . | nindent 4 }}
    app.kubernetes.io/component: deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "aim-engine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "aim-engine.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "aim-engine.serviceAccountName" . }}
      
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        
        # Command and args
        command: 
        - "python"
        - "-m"
        - "vllm.entrypoints.openai.api_server"
        args:
        - "--model"
        - {{ .Values.aim_engine.recipe.model_id | quote }}
        - "--dtype"
        - {{ .Values.aim_engine.recipe.precision | quote }}
        - "--host"
        - "0.0.0.0"
        - "--port"
        - "8000"
        {{- if .Values.aim_engine.recipe.gpu_count }}
        - "--tensor-parallel-size"
        - {{ .Values.aim_engine.recipe.gpu_count | quote }}
        {{- end }}
        
        # Port
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        
        # Resources
        resources:
          requests:
            cpu: "4"
            memory: "16Gi"
            {{- if .Values.aim_engine.recipe.gpu_count }}
            amd.com/gpu: {{ .Values.aim_engine.recipe.gpu_count | quote }}
            {{- end }}
          limits:
            cpu: "8"
            memory: "32Gi"
            {{- if .Values.aim_engine.recipe.gpu_count }}
            amd.com/gpu: {{ .Values.aim_engine.recipe.gpu_count | quote }}
            {{- end }}
        
        # Environment variables
        env:
        - name: HIP_VISIBLE_DEVICES
          value: "0,1,2,3,4,5,6,7"
        - name: PYTORCH_ROCM_ARCH
          value: "gfx90a"
        - name: VLLM_USE_ROCM
          value: "1"
        - name: HF_HUB_DISABLE_TELEMETRY
          value: "1"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Volume mounts
        volumeMounts:
        - name: model-cache
          mountPath: /workspace/model-cache
      
      # Volumes
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: {{ include "aim-engine.fullname" . }}-pvc
      
      # Node selector
      nodeSelector:
        amd.com/gpu: "true"
        kubernetes.io/os: linux
      
      # Tolerations
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: amd.com/gpu
        operator: Exists
        effect: NoSchedule 