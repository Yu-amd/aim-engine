apiVersion: v1
kind: ServiceAccount
metadata:
  name: aim-engine-sa
  namespace: aim-engine
  labels:
    app: aim-engine
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aim-engine-role
  labels:
    app: aim-engine
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "ingressclasses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aim-engine-role-binding
  labels:
    app: aim-engine
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aim-engine-role
subjects:
- kind: ServiceAccount
  name: aim-engine-sa
  namespace: aim-engine
---
# Pod Security Policy (if using older Kubernetes versions)
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: aim-engine-psp
  labels:
    app: aim-engine
spec:
  privileged: true  # Required for GPU access
  allowPrivilegeEscalation: true
  allowedHostPaths:
  - pathPrefix: /dev/kfd
    readOnly: false
  - pathPrefix: /dev/dri
    readOnly: false
  - pathPrefix: /workspace/model-cache
    readOnly: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*' 